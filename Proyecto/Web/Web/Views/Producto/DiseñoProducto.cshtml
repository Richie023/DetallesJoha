@model Web.Entidades.Producto

@{
    ViewBag.Title = "DiseñoProducto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="section">
    <div class="container">
        <div class="row">
            <!-- Panel Lateral (izquierda) -->
            <div class="col-md-3 editor-sidebar">
                <h3>¿Qué sigue para ti?</h3>
                <!-- Botones con iconos -->
                <button class="btn" onclick="uploadFile()">
                    <i class="icon fas fa-cloud-upload-alt"></i> Subir
                </button>
                <button class="btn" onclick="addText()">
                    <i class="icon fas fa-text-width"></i> Agregar Texto
                </button>
                <button class="btn" onclick="openArtCategories()">
                    <i class="icon fas fa-palette"></i> Agregar Arte
                </button>

                <!-- Contenedor de búsqueda de arte -->
                <div id="search-art" class="search-art-container" style="display: none;">
                    <input type="text" id="art-search" placeholder="Búsqueda de obras de arte">
                </div>
                <!-- Contenedor de categorías de arte -->
                <div id="categories-container" class="categories-container" style="display: none;">

                    <button class="category-button" onclick="showEmojis()">Emojis</button>

                    <button class="category-button" onclick="showShapes()">Formas y símbolos</button>

                    <button class="category-button" onclick="showSports()">Deportes y Juegos</button>

                    <button class="category-button" onclick="showLettersNumbers()">Letras / Números</button>

                    <button class="category-button" onclick="showAnimals()">Animales</button>

                    <button class="category-button" onclick="showNature()">Naturaleza</button>

                    <button class="category-button">
                        <i class="fas fa-cogs"></i> Más
                    </button>
                </div>
                <button class="btn" onclick="changeProduct()">
                    <i class="icon fas fa-tshirt"></i> Cambiar Producto
                </button>
                <button class="btn" onclick="toggleColorPicker()">
                    <i class="icon fas fa-palette"></i> Colores Del Producto
                </button>
                <!-- Selector de color -->
                <div id="color-picker" class="color-picker" style="display: none;">
                    <!-- Color Selection -->
                    <div class="color-selection">
                        <label for="color">Color:</label>
                        <div class="color-options">
                            <!-- Add color options below -->
                            <div class="color-option" style="background-color: black;" data-color="black"></div>
                            <div class="color-option" style="background-color: darkblue;" data-color="darkblue"></div>
                            <div class="color-option" style="background-color: darkgreen;" data-color="darkgreen"></div>
                            <div class="color-option" style="background-color: darkgray;" data-color="darkgray"></div>
                            <div class="color-option" style="background-color: red;" data-color="red"></div>
                            <div class="color-option" style="background-color: blue;" data-color="blue"></div>
                            <div class="color-option" style="background-color: green;" data-color="green"></div>
                            <div class="color-option" style="background-color: purple;" data-color="purple"></div>
                            <div class="color-option" style="background-color: yellow;" data-color="yellow"></div>
                            <div class="color-option" style="background-color: orange;" data-color="orange"></div>
                            <div class="color-option" style="background-color: pink;" data-color="pink"></div>
                            <div class="color-option" style="background-color: gray;" data-color="gray"></div>
                            <div class="color-option" style="background-color: lightblue;" data-color="lightblue"></div>
                            <div class="color-option" style="background-color: brown;" data-color="brown"></div>
                            <div class="color-option" style="background-color: beige;" data-color="beige"></div>
                            <!-- Add more colors as needed -->
                        </div>
                    </div>
                </div>
                <button class="btn" onclick="openNameModal()">
                    <i class="icon fas fa-font"></i> Agregar Nombres
                </button>
                <!-- Herramientas para los nombres y números -->
                <div id="name-options">
                    <label><input type="checkbox" id="addNames" checked> Agregar nombres</label><br>
                    <label><input type="checkbox" id="addNumbers"> Sumar números</label><br>
                    <label for="side">Lado:</label>
                    <select id="side">
                        <option value="front">Frente</option>
                        <option value="back">Atrás</option>
                    </select><br>
                    <label for="height">Altura:</label>
                    <select id="height">
                        <option value="2">2 Pulgadas</option>
                        <option value="3">3 Pulgadas</option>
                        <option value="4">4 Pulgadas</option>
                    </select><br>
                    <label for="color">Color:</label>
                    <select id="color">
                        <option value="white">Blanco</option>
                        <option value="black">Negro</option>
                    </select>
                </div>

                <!-- Contenedor de Emojis -->
                <div id="emoji-categories" class="emoji-categories" style="display: none;">
                    <button class="category-button" onclick="showEmojiList('Emoticonos')">Emoticonos</button>
                    <button class="category-button" onclick="showEmojiList('Gente')">Gente</button>
                    <button class="category-button" onclick="showEmojiList('Manos')">Manos</button>
                    <button class="category-button" onclick="showEmojiList('Animales')">Animales</button>
                    <button class="category-button" onclick="showEmojiList('Naturaleza y clima')">Naturaleza y clima</button>
                    <button class="category-button" onclick="showEmojiList('Comida y bebida')">Comida y bebida</button>
                    <button class="category-button" onclick="showEmojiList('Vacaciones')">Vacaciones</button>
                    <button class="category-button" onclick="showEmojiList('Objetos y símbolos')">Objetos y símbolos</button>
                    <button class="category-button" onclick="showEmojiList('Ver Todos')">VER TODO</button>
                </div>
                <!-- Contenedor de emojis -->
                <div id="emoji-container" class="emoji-container"></div>

                <!-- Contenedor de formas y símbolos -->
                <div id="shapes-container" class="shapes-container" style="display: none;">
                    <button class="category-button" onclick="showShapeList('Anclas')">Anclas</button>
                    <button class="category-button" onclick="showShapeList('Flechas')">Flechas</button>
                    <button class="category-button" onclick="showShapeList('Cruces')">Cruces</button>
                    <button class="category-button" onclick="showShapeList('Coronas')">Coronas</button>
                    <button class="category-button" onclick="showShapeList('Diamantes')">Diamantes</button>
                    <button class="category-button" onclick="showShapeList('Flores')">Flores</button>
                    <button class="category-button" onclick="showShapeList('Corazones')">Corazones</button>
                    <button class="category-button" onclick="showShapeList('Signos Musicales')">Signos Musicales</button>
                    <button class="category-button" onclick="showShapeList('Tréboles')">Tréboles</button>
                    <button class="category-button" onclick="showShapeList('Estrellas')">Estrellas</button>
                    <button class="category-button" onclick="showShapeList('Ver Todos')">VER TODO</button>
                </div>
                <!-- Contenedor de formas -->
                <div id="shape-container" class="emoji-container"></div>

                <!-- Contenedor de deportes y juegos -->
                <div id="sports-container" class="sports-container" style="display: none;">
                    <button class="category-button" onclick="showSportsList('Futbol')">Fútbol</button>
                    <button class="category-button" onclick="showSportsList('Beisbol')">Béisbol</button>
                    <button class="category-button" onclick="showSportsList('Baloncesto')">Baloncesto</button>
                    <button class="category-button" onclick="showSportsList('Billar y pool')">Billar y pool</button>
                    <button class="category-button" onclick="showSportsList('Boxeo')">Boxeo</button>
                    <button class="category-button" onclick="showSportsList('Ajedrez')">Ajedrez</button>
                    <button class="category-button" onclick="showSportsList('Bailar')">Bailar</button>
                    <button class="category-button" onclick="showSportsList('Golf')">Golf</button>
                    <button class="category-button" onclick="showSportsList('Painball')">Painball</button>
                    <button class="category-button" onclick="showSportsList('Natacion')">Natación</button>
                    <button class="category-button" onclick="showSportsList('Esquiar')">Esquiar</button>
                    <button class="category-button" onclick="showSportsList('Atletismo')">Atletismo</button>
                    <button class="category-button" onclick="showSportsList('Ver Todos')">VER TODO</button>
                </div>
                <!-- Contenedor de deportes -->
                <div id="sports-container-items" class="emoji-container"></div>

                <!-- Contenedor de Letras y Números -->
                <div id="letters-numbers-container" class="letters-numbers-container" style="display: none;">
                    <button class="category-button" onclick="showLettersList('Alfabetos')">Alfabetos</button>
                    <button class="category-button" onclick="showLettersList('Personajes')">Personajes</button>
                    <button class="category-button" onclick="showLettersList('Letras griegas')">Letras griegas</button>
                    <button class="category-button" onclick="showLettersList('Letras')">Letras</button>
                    <button class="category-button" onclick="showLettersList('Monogramas')">Monogramas</button>
                    <button class="category-button" onclick="showLettersList('Números')">Números</button>
                    <button class="category-button" onclick="showLettersList('Puntuación')">Puntuación</button>
                    <button class="category-button" onclick="showLettersList('Símbolos')">Símbolos</button>
                    <button class="category-button" onclick="showLettersList('Ver Todos')">VER TODOS</button>
                </div>
                <!-- Contenedor de letras y números -->
                <div id="letters-numbers-container-items" class="emoji-container"></div>

                <!-- Contenedor de animales -->
                <div id="animals-container" class="animals-container" style="display: none;">
                    <button class="category-button" onclick="showAnimalList('Perros')">Perros</button>
                    <button class="category-button" onclick="showAnimalList('Osos')">Osos</button>
                    <button class="category-button" onclick="showAnimalList('Leones')">Leones</button>
                    <button class="category-button" onclick="showAnimalList('Tigres')">Tigres</button>
                    <button class="category-button" onclick="showAnimalList('Toros')">Toros</button>
                    <button class="category-button" onclick="showAnimalList('Ovejas')">Ovejas</button>
                    <button class="category-button" onclick="showAnimalList('Mariposas')">Mariposas</button>
                    <button class="category-button" onclick="showAnimalList('Gatos')">Gatos</button>
                    <button class="category-button" onclick="showAnimalList('Delfines')">Delfines</button>
                    <button class="category-button" onclick="showAnimalList('Ballenas')">Ballenas</button>
                    <button class="category-button" onclick="showAnimalList('Aguilas')">Águilas</button>
                    <button class="category-button" onclick="showAnimalList('Elefantes')">Elefantes</button>
                    <button class="category-button" onclick="showAnimalList('Caballos')">Caballos</button>
                    <button class="category-button" onclick="showAnimalList('Ver Todos')">VER TODOS</button>
                </div>
                <!-- Contenedor de animales -->
                <div id="animals-container-items" class="emoji-container"></div>

                <!-- Contenedor de Naturaleza -->
                <div id="nature-container" class="nature-container" style="display: none;">
                    <button class="category-button" onclick="showNatureList('Playas')">Playas</button>
                    <button class="category-button" onclick="showNatureList('Camping')">Camping</button>
                    <button class="category-button" onclick="showNatureList('Nubes')">Nubes</button>
                    <button class="category-button" onclick="showNatureList('Cristales')">Cristales</button>
                    <button class="category-button" onclick="showNatureList('Desiertos')">Desiertos</button>
                    <button class="category-button" onclick="showNatureList('Tierras')">Tierras</button>
                    <button class="category-button" onclick="showNatureList('Fuego')">Fuego</button>
                    <button class="category-button" onclick="showNatureList('Flores')">Flores</button>
                    <button class="category-button" onclick="showNatureList('Césped')">Césped</button>
                    <button class="category-button" onclick="showNatureList('Lagos y Rios')">Lagos y Ríos</button>
                    <button class="category-button" onclick="showNatureList('Montañas')">Montañas</button>
                    <button class="category-button" onclick="showNatureList('Palmeras')">Palmeras</button>
                    <button class="category-button" onclick="showNatureList('Rocas')">Rocas</button>
                    <button class="category-button" onclick="showNatureList('Ver Todos')">VER TODOS</button>
                </div>
                <!-- Contenedor de naturaleza -->
                <div id="nature-container-items" class="emoji-container"></div>

            </div>

            <!-- Vista del producto (derecha) -->
            <div class="col-md-9 product-preview">
                <h2>Editar diseño de: @Model.NombreProducto</h2>

                <!-- Textos para edición -->
                <div id="editableTextContainer"></div>

                <!-- Deshacer y Rehacer -->
                <div class="undo-redo-btns">
                    <button onclick="undoAction()">Deshacer</button>
                    <button onclick="redoAction()">Rehacer</button>
                </div>

                <!-- Cambiar vista del producto -->
                <div class="rotate-btn">
                    <button onclick="rotateProduct('front')">Frente</button>
                    <button onclick="rotateProduct('back')">Atrás</button>
                    <button onclick="rotateProduct('sleeve-left')">Manga Izquierda</button>
                    <button onclick="rotateProduct('sleeve-right')">Manga Derecha</button>
                </div>

                <!-- Lienzo de Fabric.js -->
                <canvas id="productCanvas" class="product-canvas"></canvas>
            </div>

        </div>
    </div>
</div>
<!-- Modal de agregar nombres -->
<div id="nameModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeNameModal()">&times;</span>
        <h2>Herramientas de nombres y números</h2>
        <form>
            <label><input type="checkbox" id="addNames" checked> Agregar nombres</label><br>
            <label><input type="checkbox" id="addNumbers"> Sumar números</label><br>
            <label for="side">Lado:</label>
            <select id="side">
                <option value="front">Frente</option>
                <option value="back">Atrás</option>
            </select><br>
            <label for="height">Altura:</label>
            <select id="height">
                <option value="2">2 Pulgadas</option>
                <option value="3">3 Pulgadas</option>
                <option value="4">4 Pulgadas</option>
            </select><br>
            <label for="color">Color:</label>
            <select id="color">
                <option value="white">Blanco</option>
                <option value="black">Negro</option>
            </select><br>
            <button type="button" class="btn-custom" onclick="addTextToImage()">Paso 2: Ingrese nombres y números</button>
        </form>
    </div>
</div>

<script src="https://kit.fontawesome.com/a076d05399.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/5.3.0/fabric.min.js"></script>


<script>


    // Inicializar Fabric.js
const canvas = new fabric.Canvas('productCanvas', {
    backgroundColor: 'white',
    width: 400, // Ancho del lienzo
    height: 400, // Alto del lienzo
});

// Cargar la imagen del producto en el lienzo
function loadProductImage(imageUrl) {
    fabric.Image.fromURL(imageUrl, function (img) {
        img.selectable = false; // La imagen de fondo no debe ser seleccionable
        img.lockMovementX = true; // Bloquear movimiento horizontal
        img.lockMovementY = true; // Bloquear movimiento vertical
        img.scaleToWidth(canvas.width); // Ajustar ancho al lienzo
        img.scaleToHeight(canvas.height); // Ajustar alto al lienzo
        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas)); // Establecer como fondo
    });
}

// Llamar a la función para cargar la imagen
const productImageUrl = '@Model.RutaImagen'; // Ruta de la imagen desde el modelo
loadProductImage(productImageUrl);


   

        // Agregar texto al lienzo
        function addText() {
        const text = new fabric.Textbox('Texto de ejemplo', {
            left: 50,
        top: 50,
        fontSize: 20,
        fill: 'black',
        });
        canvas.add(text).setActiveObject(text);
    }

    // Subir una imagen al lienzo
    function uploadFile() {
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = 'image/*';
        input.onchange = function (event) {
            const file = event.target.files[0];
            const reader = new FileReader();
            reader.onload = function (e) {
                fabric.Image.fromURL(e.target.result, function (img) {
                    img.scaleToWidth(200);
                    canvas.add(img).setActiveObject(img);
                });
            };
            reader.readAsDataURL(file);
        };
        input.click();
    }

        // Cambiar el color de fondo del lienzo
        function toggleColorPicker() {
        const colorPicker = document.getElementById('color-picker');
        colorPicker.style.display = colorPicker.style.display === 'none' ? 'block' : 'none';

        // Agregar eventos a las opciones de color
        document.querySelectorAll('.color-option').forEach(option => {
            option.addEventListener('click', function () {
                const color = this.getAttribute('data-color');
                canvas.setBackgroundColor(color, canvas.renderAll.bind(canvas));
            });
        });
    }

        // Limpiar el lienzo
        function clearCanvas() {
        if (confirm('¿Estás seguro de que deseas limpiar el lienzo? Esta acción no se puede deshacer.')) {
            canvas.clear();
        canvas.setBackgroundColor('white', canvas.renderAll.bind(canvas));
        }
    }

        // Descargar el diseño como una imagen
        function downloadCanvas() {
        const link = document.createElement('a');
        link.download = 'diseño.png';
        link.href = canvas.toDataURL({
            format: 'png',
        quality: 1,
        });
        link.click();
    }

        // Subir un archivo local e insertarlo en el lienzo
        function uploadFile() {
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = 'image/*';
        input.onchange = function(event) {
            const file = event.target.files[0];
        const reader = new FileReader();
        reader.onload = function(e) {
            fabric.Image.fromURL(e.target.result, function (img) {
                img.scaleToWidth(200);
                img.scaleToHeight(200);
                canvas.add(img).setActiveObject(img);
            });
            };
        reader.readAsDataURL(file);
        };
        input.click();
    }






    // Mostrar las categorías de arte
    function openArtCategories() {
        document.getElementById('search-art').style.display = 'block';
        document.getElementById('categories-container').style.display = 'grid';
    }

    // Mostrar animales
    function showAnimals() {
        document.getElementById('animals-container').style.display = 'block';
        document.getElementById('categories-container').style.display = 'none';
    }

    // Mostrar animales de una categoría específica
    function showAnimalList(animal) {
        const animalContainer = document.getElementById('animals-container-items');
        animalContainer.innerHTML = ''; // Limpiar animales actuales

        const animals = {
            'Perros': ['🐶', '🐕', '🐩', '🦮', '🐕‍🦺'],
            'Osos': ['🐻', '🐻‍❄️', '🦭', '🐨', '🐻‍🐯'],
            'Leones': ['🦁', '🦁🐾', '👑', '🦁🦷', '🐾'],
            'Tigres': ['🐯', '🐅', '🐅👑', '🐯🦁', '🐯🐾'],
            'Toros': ['🐂', '🐃', '🐂🐄', '🐄', '🦙'],
            'Ovejas': ['🐑', '🐏', '🐐', '🐑🐐', '🐐🐏'],
            'Mariposas': ['🦋', '🐛', '🐜', '🐦', '🐝'],
            'Gatos': ['🐱', '🐈', '🐾', '😺', '😻'],
            'Delfines': ['🐬', '🐋', '🐟', '🐠', '🦈'],
            'Ballenas': ['🐋', '🐳', '🐬', '🦈', '🐠'],
            'Aguilas': ['🦅', '🐦', '🦅💨', '🐦🦋', '🦅🐦'],
            'Elefantes': ['🐘', '🐘👑', '🐘🐾', '🦏', '🐘🐅'],
            'Caballos': ['🐴', '🐎', '🐴🐄', '🦄', '🐴🐾'],
            'Ver Todos': ['🐶', '🐕', '🐩', '🦮', '🐕‍🦺', '🐻', '🐻‍❄️', '🦭', '🐨', '🐻‍🐯', '🦁', '🦁🐾', '👑', '🦁🦷', '🐾', '🐂', '🐃', '🐂🐄', '🐄', '🦙',
                '🐑', '🐏', '🐐', '🐑🐐', '🐐🐏', '🦋', '🐛', '🐜', '🐦', '🐝', '🐱', '🐈', '🐾', '😺', '😻', '🐬', '🐋', '🐟', '🐠', '🦈',
                '🐋', '🐳', '🐬', '🦈', '🐠', '🦅', '🐦', '🦅💨', '🐦🦋', '🦅🐦', '🐘', '🐘👑', '🐘🐾', '🦏', '🐘🐅', '🐴', '🐎', '🐴🐄', '🦄', '🐴🐾']

        };

        // Agregar los animales correspondientes a la categoría seleccionada
        animals[animal].forEach(animalSymbol => {
            const animalButton = document.createElement('button');
            animalButton.innerHTML = animalSymbol;
            animalButton.onclick = function () {
                placeShape(animalSymbol);
            };
            animalContainer.appendChild(animalButton);
        });

        // Mostrar el contenedor de animales
        animalContainer.style.display = 'grid';
    }

    // Función para colocar el animal sobre la imagen del producto
    function placeShape(shape) {
        const productImage = document.getElementById('product-image');
        const shapeElement = document.createElement('span');
        shapeElement.classList.add('product-shape');
        shapeElement.textContent = shape;

        // Añadir el animal a la imagen del producto
        productImage.parentElement.appendChild(shapeElement);

        // Hacer que el animal sea arrastrable
        shapeElement.onmousedown = function (e) {
            let offsetX = e.clientX - shapeElement.getBoundingClientRect().left;
            let offsetY = e.clientY - shapeElement.getBoundingClientRect().top;

            function moveAt(e) {
                shapeElement.style.left = e.clientX - offsetX + 'px';
                shapeElement.style.top = e.clientY - offsetY + 'px';
            }

            document.addEventListener('mousemove', moveAt);

            shapeElement.onmouseup = function () {
                document.removeEventListener('mousemove', moveAt);
            };
        };
    }



    // Mostrar las categorías de arte
    function openArtCategories() {
        document.getElementById('search-art').style.display = 'block';
        document.getElementById('categories-container').style.display = 'grid';
    }

    // Mostrar Letras y Números
    function showLettersNumbers() {
        document.getElementById('letters-numbers-container').style.display = 'block';
        document.getElementById('categories-container').style.display = 'none';
    }

    // Mostrar letras y números de una categoría específica
    function showLettersList(category) {
        const lettersContainer = document.getElementById('letters-numbers-container-items');
        lettersContainer.innerHTML = ''; // Limpiar letras actuales

        const letters = {
            'Alfabetos': ['A', 'B', 'C', 'D', 'E'],
            'Personajes': ['👩‍🦰', '👨‍🦱', '🧑‍🦯', '🧑‍🦳', '👵'],
            'Letras griegas': ['α', 'β', 'γ', 'δ', 'ε'],
            'Letras': ['G', 'H', 'Z', 'M', 'R'],
            'Monogramas': ['AA', 'WW', 'FF', 'DD', 'SS'],
            'Números': ['1', '2', '3', '4', '5'],
            'Puntuación': ['.', ',', '!', '?', ';'],
            'Símbolos': ['&', '#', '$', '%'],
            'Ver Todos': ['A', 'B', 'C', 'D', 'E', '👩‍🦰', '👨‍🦱', '🧑‍🦯', '🧑‍🦳', '👵', 'α', 'β', 'γ', 'δ', 'ε', 'G', 'H', 'Z', 'M', 'R',
                'AA', 'WW', 'FF', 'DD', 'SS', '1', '2', '3', '4', '5', '.', ',', '!', '?', ';','&', '#', '$', '%']
        };

        // Agregar las letras o números correspondientes a la categoría seleccionada
        letters[category].forEach(letter => {
            const letterButton = document.createElement('button');
            letterButton.innerHTML = letter;
            letterButton.onclick = function() {
                placeShape(letter);
            };
            lettersContainer.appendChild(letterButton);
        });

        // Mostrar el contenedor de letras/números
        lettersContainer.style.display = 'grid';
    }

    // Función para colocar la letra o número sobre la imagen del producto
    function placeShape(shape) {
        const productImage = document.getElementById('product-image');
        const shapeElement = document.createElement('span');
        shapeElement.classList.add('product-shape');
        shapeElement.textContent = shape;

        // Añadir la forma o símbolo a la imagen del producto
        productImage.parentElement.appendChild(shapeElement);

        // Hacer que la letra/número sea arrastrable
        shapeElement.onmousedown = function(e) {
            let offsetX = e.clientX - shapeElement.getBoundingClientRect().left;
            let offsetY = e.clientY - shapeElement.getBoundingClientRect().top;

            function moveAt(e) {
                shapeElement.style.left = e.clientX - offsetX + 'px';
                shapeElement.style.top = e.clientY - offsetY + 'px';
            }

            document.addEventListener('mousemove', moveAt);

            shapeElement.onmouseup = function() {
                document.removeEventListener('mousemove', moveAt);
            };
        };
    }



    // Mostrar las categorías de arte
    function openArtCategories() {
        document.getElementById('search-art').style.display = 'block';
        document.getElementById('categories-container').style.display = 'grid';
    }

    // Mostrar los deportes y juegos
    function showSports() {
        // Mostrar los deportes
        document.getElementById('sports-container').style.display = 'block';
        // Ocultar las categorías de arte
        document.getElementById('categories-container').style.display = 'none';
    }

    // Mostrar deportes de una categoría específica
    function showSportsList(sport) {
        const sportContainer = document.getElementById('sports-container-items');
        sportContainer.innerHTML = ''; // Limpiar los deportes actuales

        const sports = {
            'Futbol': ['⚽️', '🥅', '🎯'],
            'Beisbol': ['⚾️', '🥎', '🏅'],
            'Baloncesto': ['🏀', '🏀🏅', '⛹️‍♂️'],
            'Billar y pool': ['🎱', '🎱🎱', '🎱🛑'],
            'Boxeo': ['🥊', '💥', '🥋'],
            'Ajedrez': ['♟️', '♞', '♜'],
            'Bailar': ['💃', '🕺', '🎶'],
            'Golf': ['⛳️', '🏌️‍♂️', '⛳️🏌️‍♂️'],
            'Painball': ['🎯', '💣', '🎽'],
            'Natacion': ['🏊‍♂️', '🏊‍♀️', '🏖️'],
            'Esquiar': ['🎿', '🏂', '❄️'],
            'Atletismo': ['🏃‍♂️', '🏃‍♀️', '🏅'],
            'Ver Todos': ['⚽️', '🥅', '🎯', '⚾️', '🥎', '🏅', '🏀', '🏀🏅', '⛹️‍♂️', '🎱', '🎱🎱', '🎱🛑', '🥊', '💥', '🥋', '♟️', '♞', '♜',
                '💃', '🕺', '🎶', '⛳️', '🏌️‍♂️', '⛳️🏌️‍♂️', '🎯', '💣', '🎽', '🏊‍♂️', '🏊‍♀️', '🏖️', '🎿', '🏂', '❄️', '🏃‍♂️', '🏃‍♀️', '🏅']
        };

        // Agregar los deportes correspondientes a la categoría seleccionada
        sports[sport].forEach(sportSymbol => {
            const sportButton = document.createElement('button');
            sportButton.innerHTML = sportSymbol;
            sportButton.onclick = function () {
                placeShape(sportSymbol);
            };
            sportContainer.appendChild(sportButton);
        });

        // Mostrar el contenedor de deportes
        sportContainer.style.display = 'grid';
    }

    // Función para colocar el deporte o símbolo sobre la imagen del producto
    function placeShape(shape) {
        const productImage = document.getElementById('product-image');
        const shapeElement = document.createElement('span');
        shapeElement.classList.add('product-shape');
        shapeElement.textContent = shape;

        // Añadir la forma o símbolo a la imagen del producto
        productImage.parentElement.appendChild(shapeElement);

        // Hacer que la forma o símbolo sea arrastrable
        shapeElement.onmousedown = function (e) {
            let offsetX = e.clientX - shapeElement.getBoundingClientRect().left;
            let offsetY = e.clientY - shapeElement.getBoundingClientRect().top;

            function moveAt(e) {
                shapeElement.style.left = e.clientX - offsetX + 'px';
                shapeElement.style.top = e.clientY - offsetY + 'px';
            }

            document.addEventListener('mousemove', moveAt);

            shapeElement.onmouseup = function () {
                document.removeEventListener('mousemove', moveAt);
            };
        };
    }



    // Mostrar las categorías de arte
    function openArtCategories() {
        document.getElementById('search-art').style.display = 'block';
        document.getElementById('categories-container').style.display = 'grid';
    }

    // Mostrar las formas y símbolos
    function showShapes() {
        // Mostrar las formas y símbolos
        document.getElementById('shapes-container').style.display = 'block';
        // Ocultar las categorías de arte
        document.getElementById('categories-container').style.display = 'none';
    }

    // Mostrar formas de una categoría específica
    function showShapeList(shape) {
        const shapeContainer = document.getElementById('shape-container');
        shapeContainer.innerHTML = ''; // Limpiar las formas actuales

        const shapes = {
            'Anclas': ['⚓', '⚓️'],
            'Flechas': ['➡️', '⏩', '↗️', '↘️'],
            'Cruces': ['✝️', '❌'],
            'Coronas': ['👑'],
            'Diamantes': ['💎'],
            'Flores': ['🌸', '🌻', '🌺'],
            'Corazones': ['❤️', '💔', '💖'],
            'Signos Musicales': ['🎵', '🎶', '🎼'],
            'Tréboles': ['🍀'],
            'Estrellas': ['⭐', '🌟', '✨'],
            'Ver Todos': ['⚓', '⚓️', '➡️', '⏩', '↗️', '↘️', '✝️', '❌', '👑', '💎', '🌸', '🌻', '🌺', '❤️', '💔', '💖', '🎵', '🎶', '🎼', '🍀', '⭐', '🌟', '✨']
        };

        // Agregar las formas correspondientes a la categoría seleccionada
        shapes[shape].forEach(shapeSymbol => {
            const shapeButton = document.createElement('button');
            shapeButton.innerHTML = shapeSymbol;
            shapeButton.onclick = function () {
                placeShape(shapeSymbol);
            };
            shapeContainer.appendChild(shapeButton);
        });

        // Mostrar el contenedor de formas
        shapeContainer.style.display = 'grid';
    }

    // Función para colocar la forma o símbolo sobre la imagen del producto
    function placeShape(shape) {
        const productImage = document.getElementById('product-image');
        const shapeElement = document.createElement('span');
        shapeElement.classList.add('product-shape');
        shapeElement.textContent = shape;

        // Añadir la forma o símbolo a la imagen del producto
        productImage.parentElement.appendChild(shapeElement);

        // Hacer que la forma o símbolo sea arrastrable
        shapeElement.onmousedown = function (e) {
            let offsetX = e.clientX - shapeElement.getBoundingClientRect().left;
            let offsetY = e.clientY - shapeElement.getBoundingClientRect().top;

            function moveAt(e) {
                shapeElement.style.left = e.clientX - offsetX + 'px';
                shapeElement.style.top = e.clientY - offsetY + 'px';
            }

            document.addEventListener('mousemove', moveAt);

            shapeElement.onmouseup = function () {
                document.removeEventListener('mousemove', moveAt);
            };
        };
    }



    // Mostrar las categorías de arte
    function openArtCategories() {
        document.getElementById('search-art').style.display = 'block';
        document.getElementById('categories-container').style.display = 'grid';
    }

    // Mostrar los emojis
    function showEmojis() {
        // Mostrar las categorías de emojis
        document.getElementById('emoji-categories').style.display = 'block';
        // Ocultar el contenedor de categorías
        document.getElementById('categories-container').style.display = 'none';
    }

    // Mostrar emojis de una categoría específica
    function showEmojiList(category) {
        const emojiContainer = document.getElementById('emoji-container');
        emojiContainer.innerHTML = ''; // Limpiar los emojis actuales

        const emojis = {
            'Emoticonos': ['😊', '😂', '😍', '😎', '😭'],
            'Gente': ['👩‍🦰', '👨‍🦱', '👵', '🧑‍🦯', '🧑‍🦳'],
            'Manos': ['✋', '🖐', '👌', '👍', '👎'],
            'Animales': ['🐶', '🐱', '🐰', '🐯', '🐸'],
            'Naturaleza y clima': ['🌞', '🌧️', '⛅', '🌈', '🌻'],
            'Comida y bebida': ['🍎', '🍔', '🍕', '🍻', '🍰'],
            'Vacaciones': ['🌴', '🏖️', '🌍', '⛷️', '🎄'],
            'Objetos y símbolos': ['⚙️', '💎', '📱', '🔑', '🔒'],
            'Ver Todos': ['😊', '😂', '😍', '😎', '😭', '👩‍🦰', '👨‍🦱', '👵', '🧑‍🦯', '🧑‍🦳', '✋', '🖐', '👌', '👍', '👎', '🐶', '🐱', '🐰', '🐯', '🐸',
                '🌞', '🌧️', '⛅', '🌈', '🌻', '🍎', '🍔', '🍕', '🍻', '🍰', '🌴', '🏖️', '🌍', '⛷️', '🎄', '⚙️', '💎', '📱', '🔑', '🔒']
        };

        // Agregar los emojis correspondientes a la categoría seleccionada
        emojis[category].forEach(emoji => {
            const emojiButton = document.createElement('button');
            emojiButton.innerHTML = emoji;
            emojiButton.onclick = function () {
                placeEmoji(emoji);
            };
            emojiContainer.appendChild(emojiButton);
        });

        // Mostrar el contenedor de emojis
        emojiContainer.style.display = 'grid';
    }

    // Función para colocar el emoji sobre la imagen del producto
    function placeEmoji(emoji) {
        const productImage = document.getElementById('product-image');
        const emojiElement = document.createElement('span');
        emojiElement.classList.add('product-emoji');
        emojiElement.textContent = emoji;

        // Añadir el emoji a la imagen del producto
        productImage.parentElement.appendChild(emojiElement);

        // Hacer que el emoji sea arrastrable
        emojiElement.onmousedown = function (e) {
            let offsetX = e.clientX - emojiElement.getBoundingClientRect().left;
            let offsetY = e.clientY - emojiElement.getBoundingClientRect().top;

            function moveAt(e) {
                emojiElement.style.left = e.clientX - offsetX + 'px';
                emojiElement.style.top = e.clientY - offsetY + 'px';
            }

            document.addEventListener('mousemove', moveAt);

            emojiElement.onmouseup = function () {
                document.removeEventListener('mousemove', moveAt);
            };
        };
    }






    // Mostrar el contenedor de categorías de arte
    function openArtCategories() {
        document.getElementById('search-art').style.display = 'block';
        document.getElementById('categories-container').style.display = 'grid';
    }



    // Cambiar la imagen del producto
    function changeProductColor(color) {
        var productImage = document.getElementById('product-image');
        // Agregar la lógica de cambio de color
    }

    // Mostrar u ocultar el selector de color
    function toggleColorPicker() {
        var colorPicker = document.getElementById('color-picker');
        if (colorPicker.style.display === 'none') {
            colorPicker.style.display = 'grid';
        } else {
            colorPicker.style.display = 'none';
        }
    }

    // Función para seleccionar el color
    function changeProductColor(color) {
        var productImage = document.getElementById('product-image');
        productImage.style.filter = `hue-rotate(${color})`; // Ajusta esto a tu lógica de cambio de color
    }



    // Variables de control
    let editableText = null;
    let actionsHistory = [];
    let currentActionIndex = -1;

    // Abre el modal de Agregar Nombres
    function openNameModal() {
        document.getElementById('nameModal').style.display = 'block';
    }

    // Cierra el modal de Agregar Nombres
    function closeNameModal() {
        document.getElementById('nameModal').style.display = 'none';
    }

    // Función para agregar texto al producto
    function addTextToImage() {
        const addNames = document.getElementById('addNames').checked;
        const addNumbers = document.getElementById('addNumbers').checked;

        let textContent = addNames ? "EXAMPLE" : "";
        if (addNumbers) {
            textContent = "00";
        }

        // Agregar el texto a la imagen
        editableText = document.createElement('div');
        editableText.classList.add('editable-text');
        editableText.textContent = textContent;
        editableText.style.top = '100px'; // default position
        editableText.style.left = '100px'; // default position

        document.getElementById('editableTextContainer').appendChild(editableText);
        saveAction();
    }

    // Función para mover el texto
    editableText?.addEventListener('mousedown', function (e) {
        let offsetX = e.clientX - editableText.offsetLeft;
        let offsetY = e.clientY - editableText.offsetTop;

        function moveAt(e) {
            editableText.style.left = e.clientX - offsetX + 'px';
            editableText.style.top = e.clientY - offsetY + 'px';
        }

        document.addEventListener('mousemove', moveAt);

        editableText.addEventListener('mouseup', function () {
            document.removeEventListener('mousemove', moveAt);
        });
    });

    // Función para deshacer la última acción
    function undoAction() {
        if (currentActionIndex > 0) {
            currentActionIndex--;
            updateEditableText(actionsHistory[currentActionIndex]);
        }
    }

    // Función para rehacer la última acción
    function redoAction() {
        if (currentActionIndex < actionsHistory.length - 1) {
            currentActionIndex++;
            updateEditableText(actionsHistory[currentActionIndex]);
        }
    }

    // Función para guardar una acción
    function saveAction() {
        if (currentActionIndex < actionsHistory.length - 1) {
            actionsHistory = actionsHistory.slice(0, currentActionIndex + 1);
        }
        actionsHistory.push(editableText);
        currentActionIndex++;
    }

    // Función para actualizar el texto editable
    function updateEditableText(textElement) {
        const container = document.getElementById('editableTextContainer');
        container.innerHTML = '';
        container.appendChild(textElement);
    }



    // hasta aqui modal


    // Función para subir un archivo
    function uploadFile() {
        alert("Función para subir un archivo");
        // Aquí puedes agregar la lógica para subir archivos
    }

    // Función para agregar texto al producto
    function addText() {
        var text = prompt("Ingrese el texto para agregar:");
        if (text) {
            var canvas = document.createElement("canvas");
            var ctx = canvas.getContext("2d");
            var img = document.getElementById("product-image");
            canvas.width = img.width;
            canvas.height = img.height;
            ctx.drawImage(img, 0, 0);
            ctx.font = "30px Arial";
            ctx.fillStyle = "white";
            ctx.fillText(text, 50, 50);  // Ajusta la posición según sea necesario
            img.src = canvas.toDataURL();
        }
    }

    // Función para agregar una imagen al producto
    function addImage() {
        alert("Función para agregar arte");
        // Aquí puedes agregar la lógica para agregar una imagen personalizada
    }

    // Función para cambiar el producto
    function changeProduct() {
        alert("Función para cambiar el producto");
        // Aquí puedes agregar la lógica para cambiar el producto
    }

    // Función para cambiar el color del producto
    function changeColor() {
        alert("Función para cambiar el color del producto");
        // Aquí puedes agregar la lógica para cambiar el color del producto
    }

    // Función para agregar nombre al producto
    function addName() {
        alert("Función para agregar nombre");
        // Aquí puedes agregar la lógica para agregar un nombre personalizado
    }

    // Función para cambiar las vistas del producto (Frente, Atrás, Mangas)
    function rotateProduct(view) {
        var image = document.getElementById("product-image");
        switch(view) {
            case 'front':
                image.src = '@Url.Content("~/Images/Products/front.jpg")'; // Asegúrate de tener estas imágenes en tu servidor
                break;
                case 'back':
                image.src = '@Url.Content("~/Images/Products/back.jpg")';
                break;
                case 'sleeve-left':
                image.src = '@Url.Content("~/Images/Products/sleeve-left.jpg")';
                break;
                case 'sleeve-right':
                image.src = '@Url.Content("~/Estilos/img/product01.png")';
                break;
                default:
                break;
                }
                }
</script>










