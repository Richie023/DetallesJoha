@model Web.Entidades.Producto

@{
    ViewBag.Title = "Personalización de Producto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<style>
    canvas {
        border: 4px solid #323232;
        background-color: transparent;
        background-size: contain;
        background-repeat: no-repeat;
    }

    .container-input {
        text-align: center;
        background: #D10024;
        border-top: 5px solid #ffffff;
        padding: 10px 0;
        border-radius: 6px;
        width: 50%;
        margin: 0 auto;
        margin-bottom: 20px;
    }

    .inputfile {
        width: 0.1px;
        height: 0.1px;
        opacity: 0;
        overflow: hidden;
        position: absolute;
        z-index: -1;
    }

        .inputfile + label {
            max-width: 40%;
            font-size: 1.25rem;
            font-weight: 700;
            cursor: pointer;
            padding: 0.625rem 1.25rem;
        }

            .inputfile + label svg {
                width: 1em;
                height: 1em;
                margin-right: 0.25em;
            }

    .iborrainputfile {
        font-size: 16px;
        font-weight: normal;
        font-family: 'Lato';
    }
</style>

<div class="section">
    <div class="container">
        <h2 class="text-center">Personaliza tu @Model.NombreProducto</h2>
        <div class="row">

            <div class="col-md-8">
                <div id="design-canvas-container">
                    <canvas id="designCanvas" width="600" height="600"></canvas>
                </div>
            </div>

           
            <div class="col-md-4">
                <div class="design-tools">
                    <h4>Herramientas de Diseño</h4>

                    <div class="tool-section">
                        <h5>Subir Archivos</h5>
                        <input type="file" id="uploadFile" accept="image/*" class="form-control" />
                    </div>


                    <br>


                    <div class="tool-section">
                        <h5>Agregar Color, Fuente y el texto que desees!</h5>
                        <label for="textColor">Color:</label>
                        <input type="color" id="textColor" value="#000000" class="form-control" />

                        <label for="fontSelect">Fuente:</label>
                        <select id="fontSelect" class="form-control">
                            <option value="Arial">Arial</option>
                            <option value="Courier New">Courier New</option>
                            <option value="Georgia">Georgia</option>
                            <option value="Verdana">Verdana</option>
                            <option value="Times New Roman">Times New Roman</option>
                            <option value="Trebuchet MS">Trebuchet MS</option>
                            <option value="Comic Sans MS">Comic Sans MS</option>
                            <option value="Impact">Impact</option>
                            <option value="Tahoma">Tahoma</option>
                            <option value="Palatino Linotype">Palatino Linotype</option>
                            <option value="Lucida Sans Unicode">Lucida Sans Unicode</option>
                            <option value="Garamond">Garamond</option>
                            <option value="Bookman">Bookman</option>
                            <option value="Franklin Gothic Medium">Franklin Gothic Medium</option>
                            <option value="Brush Script MT">Brush Script MT</option>
                            <option value="Gill Sans">Gill Sans</option>
                            <option value="Century Gothic">Century Gothic</option>
                            <option value="Candara">Candara</option>
                            <option value="Lucida Console">Lucida Console</option>
                            <option value="Helvetica">Helvetica</option>
                        </select>
                        <h5>Agregar Texto:</h5>
                        <input type="text" id="textInput" placeholder="Escribe tu texto" class="form-control" />
                        <button id="addText" class="btn btn-primary btn-block mt-2">Agregar Texto</button>

                    </div>

                    <br>

                   
                    <div class="tool-section">
                        <h5>Agregar Arte</h5>
                        <button onclick="openArtCategories()" class="btn btn-primary btn-block">Seleccionar Arte</button>

                    
                        <div id="categories-container" style="display: none; margin-top: 10px;">
                            <h6>Categorías</h6>
                            <button onclick="showCategory('emojis', 'emoji-container')" class="btn btn-secondary btn-info">Emojis</button>
                            <button onclick="showCategory('shapes', 'shape-container')" class="btn btn-secondary btn-info">Formas</button>
                            <button onclick="showCategory('sports', 'sports-container')" class="btn btn-secondary btn-info">Deportes</button>
                            <button onclick="showCategory('animals', 'animal-container')" class="btn btn-secondary btn-info">Animales</button>
                            <button onclick="showCategory('letter', 'letter-container')" class="btn btn-secondary btn-info">Letras</button>
                            <button onclick="showCategory('nature', 'nature-container')" class="btn btn-secondary btn-info">Naturaleza</button>
                        </div>

                 
                        <div id="emoji-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                        <div id="shape-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                        <div id="sports-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                        <div id="animal-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                        <div id="letter-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                        <div id="nature-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                    </div>

                    <br>

                    
                    <div class="tool-section">
                        <button id="saveDesign" class="btn btn-primary btn-block">Guardar Diseño</button>
                        <!--<a id="lnkDownload" href="" class="btn btn-secondary btn-block">Descargar Diseño</a> -->
                    </div>

                    <br>

                    
                    <div class="tool-section">
                        <button id="deleteObject" class="btn btn-danger btn-block"><i class="fa fa-trash-o fa-2x"></i>Eliminar Elemento</button>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<img id="my-image" src="@Model.RutaImagen" alt="Producto" style="display: none;">



<script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/5.3.1/fabric.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const canvas = new fabric.Canvas('designCanvas');

        // Cargar la imagen base del producto
        const imgElement = document.getElementById('my-image');
        if (imgElement) {
            const fabricImage = new fabric.Image(imgElement, {
                left: 0,
                top: 0,
                selectable: false,
            });
            fabricImage.scaleToWidth(canvas.width);
            fabricImage.scaleToHeight(canvas.height);
            canvas.add(fabricImage);
            canvas.renderAll();
        }






        //Agregar Imgane
       
        const uploadFileInput = document.getElementById('uploadFile');

        if (uploadFileInput) {
            uploadFileInput.addEventListener('change', function (e) {
                const file = e.target.files[0]; 
                if (!file) {
                    console.log('No se seleccionó ningún archivo.');
                    return;
                }

                console.log('Archivo seleccionado:', file);

                const reader = new FileReader();

                reader.onload = function (event) {
                    console.log('Contenido del archivo leído:', event.target.result);

                    const img = new Image();
                    img.onload = function () {
                        console.log('Imagen cargada correctamente.');

                        const fabricImg = new fabric.Image(img, {
                            left: canvas.width / 4,
                            top: canvas.height / 4,
                            scaleX: canvas.width / 2 / img.width,
                            scaleY: canvas.height / 2 / img.height,
                            selectable: true,
                        });

                        canvas.add(fabricImg);
                        canvas.setActiveObject(fabricImg); 
                        canvas.renderAll(); 
                        console.log('Imagen agregada al lienzo:', fabricImg);
                    };

                    img.onerror = function () {
                        console.error('Error al cargar la imagen.');
                    };

                    img.src = event.target.result; 
                };

                reader.onerror = function () {
                    console.error('Error al leer el archivo:', reader.error);
                };

                reader.readAsDataURL(file); 
            });
        } else {
            console.error('El input de archivo no se encontró. Verifica el ID en tu HTML.');
        }




        // Agregar texto al canvas
        document.getElementById('addText')?.addEventListener('click', function () {
            const text = document.getElementById('textInput').value;
            const font = document.getElementById('fontSelect').value;
            const color = document.getElementById('textColor').value;

            const textObject = new fabric.IText(text, {
                left: 50,
                top: 50,
                fontFamily: font,
                fill: color,
                fontSize: 20,
            });

            canvas.add(textObject);
            canvas.setActiveObject(textObject);
            canvas.renderAll();
        });


        // Cambiar color y fuente del texto seleccionado
        document.getElementById('textColor')?.addEventListener('input', function () {
            const activeObject = canvas.getActiveObject();
            if (activeObject && activeObject.type === 'i-text') {
                activeObject.set('fill', this.value);
                canvas.renderAll();
            }
        });

        document.getElementById('fontSelect')?.addEventListener('change', function () {
            const activeObject = canvas.getActiveObject();
            if (activeObject && activeObject.type === 'i-text') {
                activeObject.set('fontFamily', this.value);
                canvas.renderAll();
            }
        });


        // Eliminar el objeto seleccionado
        document.getElementById('deleteObject')?.addEventListener('click', function () {
            const activeObject = canvas.getActiveObject();
            if (activeObject) {
                canvas.remove(activeObject);
                canvas.renderAll();
            } else {
                alert('Por favor selecciona un objeto para eliminar.');
            }
        });


        // Guardar el diseño del canvas
        document.getElementById('saveDesign')?.addEventListener('click', function () {
            const link = document.createElement('a');
            link.download = 'diseño-personalizado.png';
            link.href = canvas.toDataURL();
            link.click();
        });


        // Mostrar las categorías de arte
        window.openArtCategories = function () {
            document.getElementById('categories-container').style.display = 'block';
        };


        // Mostrar una categoría específica
        window.showCategory = function (categoryId, containerId) {
            document.querySelectorAll('.category-container').forEach(container => {
                container.style.display = 'none';
            });

            const container = document.getElementById(containerId);
            const dataCategory = data[categoryId];
            container.innerHTML = '';

            for (const subCategory in dataCategory) {
                const button = document.createElement('button');
                button.innerHTML = subCategory;
                button.classList.add('btn', 'btn-outline-primary', 'btn-sm', 'm-1');
                button.onclick = () => showSubCategoryItems(subCategory, dataCategory, container);
                container.appendChild(button);
            }

            container.style.display = 'grid';
        };


        // Mostrar los elementos de una subcategoría
        function showSubCategoryItems(category, items, container) {
            container.innerHTML = '';
            items[category].forEach(item => {
                const button = document.createElement('button');
                button.innerHTML = item;
                button.classList.add('btn', 'btn-outline-secondary', 'btn-sm', 'm-1');
                button.onclick = () => placeShape(item);
                container.appendChild(button);
            });
        }

        // Agregar elementos como emojis o formas al canvas
        function placeShape(art) {
            const textObject = new fabric.Text(art, {
                left: 50,
                top: 50,
                fontSize: 40,
                fill: '#000',
                fontFamily: 'Arial',
            });

            canvas.add(textObject);
            canvas.setActiveObject(textObject);
            canvas.renderAll();
        }

        // Datos de las categorías
        const data = {
            emojis: {
                'Emoticonos': ['😊', '😂', '😍', '😎', '😭'],
                'Gente': ['👩‍🦰', '👨‍🦱', '👵', '🧑‍🦯', '🧑‍🦳'],
                'Manos': ['✋', '🖐', '👌', '👍', '👎'],
                'Animales': ['🐶', '🐱', '🐰', '🐯', '🐸'],
                'Naturaleza y clima': ['🌞', '🌧️', '⛅', '🌈', '🌻'],
                'Comida y bebida': ['🍎', '🍔', '🍕', '🍻', '🍰'],
                'Vacaciones': ['🌴', '🏖️', '🌍', '⛷️', '🎄'],
                'Objetos y símbolos': ['⚙️', '💎', '📱', '🔑', '🔒'],
                'Ver Todos': ['😊', '😂', '😍', '😎', '😭', '👩‍🦰', '👨‍🦱', '👵', '🧑‍🦯', '🧑‍🦳', '✋', '🖐', '👌', '👍', '👎', '🐶', '🐱', '🐰', '🐯', '🐸',
                    '🌞', '🌧️', '⛅', '🌈', '🌻', '🍎', '🍔', '🍕', '🍻', '🍰', '🌴', '🏖️', '🌍', '⛷️', '🎄', '⚙️', '💎', '📱', '🔑', '🔒']
            },
            shapes: {
                'Anclas': ['⚓', '⚓️'],
                'Flechas': ['➡️', '⏩', '↗️', '↘️'],
                'Cruces': ['✝️', '❌'],
                'Coronas': ['👑'],
                'Diamantes': ['💎'],
                'Flores': ['🌸', '🌻', '🌺'],
                'Corazones': ['❤️', '💔', '💖'],
                'Signos Musicales': ['🎵', '🎶', '🎼'],
                'Tréboles': ['🍀'],
                'Estrellas': ['⭐', '🌟', '✨'],
                'Ver Todos': ['⚓', '⚓️', '➡️', '⏩', '↗️', '↘️', '✝️', '❌', '👑', '💎', '🌸', '🌻', '🌺', '❤️', '💔', '💖', '🎵', '🎶', '🎼', '🍀', '⭐', '🌟', '✨']
            },
            sports: {
                'Futbol': ['⚽️', '🥅', '🎯'],
                'Beisbol': ['⚾️', '🥎', '🏅'],
                'Baloncesto': ['🏀', '🏀🏅', '⛹️‍♂️'],
                'Billar y pool': ['🎱', '🎱🎱', '🎱🛑'],
                'Boxeo': ['🥊', '💥', '🥋'],
                'Ajedrez': ['♟️', '♞', '♜'],
                'Bailar': ['💃', '🕺', '🎶'],
                'Golf': ['⛳️', '🏌️‍♂️', '⛳️🏌️‍♂️'],
                'Painball': ['🎯', '💣', '🎽'],
                'Natacion': ['🏊‍♂️', '🏊‍♀️', '🏖️'],
                'Esquiar': ['🎿', '🏂', '❄️'],
                'Atletismo': ['🏃‍♂️', '🏃‍♀️', '🏅'],
                'Ver Todos': ['⚽️', '🥅', '🎯', '⚾️', '🥎', '🏅', '🏀', '🏀🏅', '⛹️‍♂️', '🎱', '🎱🎱', '🎱🛑', '🥊', '💥', '🥋', '♟️', '♞', '♜',
                    '💃', '🕺', '🎶', '⛳️', '🏌️‍♂️', '⛳️🏌️‍♂️', '🎯', '💣', '🎽', '🏊‍♂️', '🏊‍♀️', '🏖️', '🎿', '🏂', '❄️', '🏃‍♂️', '🏃‍♀️', '🏅']

            },
            animals: {
                'Perros': ['🐶', '🐕', '🐩', '🦮', '🐕‍🦺'],
                'Osos': ['🐻', '🐻‍❄️', '🦭', '🐨', '🐻‍🐯'],
                'Leones': ['🦁', '🦁🐾', '👑', '🦁🦷', '🐾'],
                'Tigres': ['🐯', '🐅', '🐅👑', '🐯🦁', '🐯🐾'],
                'Toros': ['🐂', '🐃', '🐂🐄', '🐄', '🦙'],
                'Ovejas': ['🐑', '🐏', '🐐', '🐑🐐', '🐐🐏'],
                'Mariposas': ['🦋', '🐛', '🐜', '🐦', '🐝'],
                'Gatos': ['🐱', '🐈', '🐾', '😺', '😻'],
                'Delfines': ['🐬', '🐋', '🐟', '🐠', '🦈'],
                'Ballenas': ['🐋', '🐳', '🐬', '🦈', '🐠'],
                'Aguilas': ['🦅', '🐦', '🦅💨', '🐦🦋', '🦅🐦'],
                'Elefantes': ['🐘', '🐘👑', '🐘🐾', '🦏', '🐘🐅'],
                'Caballos': ['🐴', '🐎', '🐴🐄', '🦄', '🐴🐾'],
                'Ver Todos': ['🐶', '🐕', '🐩', '🦮', '🐕‍🦺', '🐻', '🐻‍❄️', '🦭', '🐨', '🐻‍🐯', '🦁', '🦁🐾', '👑', '🦁🦷', '🐾', '🐂', '🐃', '🐂🐄', '🐄', '🦙',
                    '🐑', '🐏', '🐐', '🐑🐐', '🐐🐏', '🦋', '🐛', '🐜', '🐦', '🐝', '🐱', '🐈', '🐾', '😺', '😻', '🐬', '🐋', '🐟', '🐠', '🦈',
                    '🐋', '🐳', '🐬', '🦈', '🐠', '🦅', '🐦', '🦅💨', '🐦🦋', '🦅🐦', '🐘', '🐘👑', '🐘🐾', '🦏', '🐘🐅', '🐴', '🐎', '🐴🐄', '🦄', '🐴🐾']
            },
            nature: {
                'Playas': ['🌴', '🏖️', '🌊'],
                'Montañas': ['🏔️', '⛰️', '🌋'],
                'Ver Todos': ['🌴', '🏖️', '🌊', '🏔️', '⛰️', '🌋']
            },

            letter: {
                'Alfabetos': ['A', 'B', 'C', 'D', 'E'],
                'Personajes': ['👩‍🦰', '👨‍🦱', '🧑‍🦯', '🧑‍🦳', '👵'],
                'Letras griegas': ['α', 'β', 'γ', 'δ', 'ε'],
                'Letras': ['G', 'H', 'Z', 'M', 'R'],
                'Monogramas': ['AA', 'WW', 'FF', 'DD', 'SS'],
                'Números': ['1', '2', '3', '4', '5'],
                'Puntuación': ['.', ',', '!', '?', ';'],
                'Símbolos': ['&', '#', '$', '%'],
                'Ver Todos': ['A', 'B', 'C', 'D', 'E', '👩‍🦰', '👨‍🦱', '🧑‍🦯', '🧑‍🦳', '👵', 'α', 'β', 'γ', 'δ', 'ε', 'G', 'H', 'Z', 'M', 'R',
                    'AA', 'WW', 'FF', 'DD', 'SS', '1', '2', '3', '4', '5', '.', ',', '!', '?', ';', '&', '#', '$', '%']

            },
        };
    });
</script>

