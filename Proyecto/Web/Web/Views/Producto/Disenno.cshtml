@model Web.Entidades.Producto

@{
    ViewBag.Title = "Personalización de Producto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    canvas {
        border: 4px solid #323232;
        background-color: transparent;
        background-size: contain;
        background-repeat: no-repeat;
    }

    .container-input {
        text-align: center;
        background: #D10024;
        border-top: 5px solid #ffffff;
        padding: 10px 0;
        border-radius: 6px;
        width: 50%;
        margin: 0 auto;
        margin-bottom: 20px;
    }

    .inputfile {
        width: 0.1px;
        height: 0.1px;
        opacity: 0;
        overflow: hidden;
        position: absolute;
        z-index: -1;
    }

        .inputfile + label {
            max-width: 40%;
            font-size: 1.25rem;
            font-weight: 700;
            cursor: pointer;
            padding: 0.625rem 1.25rem;
        }

            .inputfile + label svg {
                width: 1em;
                height: 1em;
                margin-right: 0.25em;
            }

    .iborrainputfile {
        font-size: 16px;
        font-weight: normal;
        font-family: 'Lato';
    }
</style>

<div class="section">
    <div class="container">
        <h2 class="text-center">Personaliza tu Producto</h2>
        <div class="row">
            <!-- Editor de diseño -->
            <div class="col-md-8">
                <div id="design-canvas-container">
                    <!-- Canvas para la edición del producto -->
                    <canvas id="designCanvas" width="600" height="600"></canvas>
                </div>
            </div>

            <!-- Herramientas de personalización -->
            <div class="col-md-4">
                <div class="design-tools">
                    <h4>Herramientas de Diseño</h4>

                    <!-- Subir archivos -->
                    <div class="tool-section">
                        <h5>Subir Archivos</h5>
                        <input type="file" id="uploadFile" accept="image/*" class="form-control" />
                    </div>

                    <!-- Agregar Texto -->
                    <div class="tool-section">
                        <h5>Agregar Texto</h5>
                        <input type="text" id="textInput" placeholder="Escribe tu texto" class="form-control" />
                        <button id="addText" class="btn btn-primary btn-block mt-2">Agregar Texto</button>

                        <label for="fontSelect">Fuente:</label>
                        <select id="fontSelect" class="form-control">
                            <option value="Arial">Arial</option>
                            <option value="Courier New">Courier New</option>
                            <option value="Georgia">Georgia</option>
                            <option value="Verdana">Verdana</option>
                        </select>

                        <label for="textColor">Color:</label>
                        <input type="color" id="textColor" value="#000000" class="form-control" />
                    </div>

                    <!-- Agregar Arte -->
                    <div class="tool-section">
                        <h5>Agregar Arte</h5>
                        <button onclick="openArtCategories()" class="btn btn-primary btn-block">Seleccionar Arte</button>

                        <!-- Contenedor de categorías -->
                        <div id="categories-container" style="display: none; margin-top: 10px;">
                            <h6>Categorías</h6>
                            <button onclick="showCategory('emojis', 'emoji-container')" class="btn btn-secondary btn-sm">Emojis</button>
                            <button onclick="showCategory('shapes', 'shape-container')" class="btn btn-secondary btn-sm">Formas</button>
                            <button onclick="showCategory('sports', 'sports-container')" class="btn btn-secondary btn-sm">Deportes</button>
                            <button onclick="showCategory('animals', 'animal-container')" class="btn btn-secondary btn-sm">Animales</button>
                            <button onclick="showCategory('nature', 'nature-container')" class="btn btn-secondary btn-sm">Naturaleza</button>
                            <button onclick="showCategory('letter', 'letter-container')" class="btn btn-secondary btn-sm">Letras</button>
                        </div>

                        <!-- Contenedor de elementos dentro de cada categoría -->
                        <div id="emoji-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                        <div id="shape-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                        <div id="sports-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                        <div id="animal-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                        <div id="nature-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                        <div id="letter-container" class="category-container" style="display: none; margin-top: 10px;"></div>
                    </div>



                    <!-- Cambiar Colores del Producto -->
                    <div class="tool-section">
                        <h5>Colores del Producto</h5>
                        <input type="color" id="productColor" value="#ffffff" class="form-control" />
                    </div>


                    <!-- Botón para eliminar el objeto seleccionado -->
                    <div class="tool-section">
                        <button id="deleteObject" class="btn btn-danger btn-block">Eliminar Elemento</button>
                    </div>


                    <!-- Guardar y Compartir -->
                    <div class="tool-section">
                        <button id="saveDesign" class="btn btn-success btn-block">Guardar Diseño</button>
                        <a id="lnkDownload" href="" class="btn btn-secondary btn-block">Descargar Diseño</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<img id="my-image" src="@Model.RutaImagen" alt="Producto" style="display: none;">

<script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/4.6.0/fabric.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const canvas = new fabric.Canvas('designCanvas');

        // Establecer la imagen base del producto
        const imgElement = document.getElementById('my-image');
        const fabricImage = new fabric.Image(imgElement, {
            left: 0,
            top: 0,
            selectable: false
        });

        // Escalar y centrar la imagen
        fabricImage.scaleToWidth(canvas.width);
        fabricImage.scaleToHeight(canvas.height);
        canvas.add(fabricImage);

        // Cambiar color base del producto
        document.getElementById('productColor').addEventListener('input', function (e) {
            canvas.setBackgroundColor(e.target.value, canvas.renderAll.bind(canvas));
        });

        // Subir imagen
        document.getElementById('uploadFile').addEventListener('change', function (e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (event) {
                    fabric.Image.fromURL(event.target.result, function (img) {
                        img.scaleToWidth(200);
                        canvas.add(img);
                    });
                };
                reader.readAsDataURL(file);
            }
        });

        // Agregar texto
        document.getElementById('addText').addEventListener('click', function () {
            const text = new fabric.IText(document.getElementById('textInput').value, {
                left: 50,
                top: 50,
                fontFamily: document.getElementById('fontSelect').value,
                fill: document.getElementById('textColor').value,
                fontSize: 20,
            });
            canvas.add(text);
        });


        // Función para eliminar el objeto seleccionado
        document.getElementById('deleteObject').addEventListener('click', function () {
            const activeObject = canvas.getActiveObject();
            if (activeObject) {
                canvas.remove(activeObject);
                canvas.renderAll();
            } else {
                alert('Por favor selecciona un objeto para eliminar.');
            }
        });


        // Guardar diseño
        document.getElementById('saveDesign').addEventListener('click', function () {
            const link = document.createElement('a');
            link.download = 'diseño-personalizado.png';
            link.href = canvas.toDataURL();
            link.click();
        });

        // Descargar diseño
        document.getElementById('lnkDownload').addEventListener('click', function (e) {
            e.target.href = canvas.toDataURL({ format: 'png', quality: 0.8 });
            e.target.download = 'canvas.png';
        });

        // Función para limpiar canvas
        window.clearAll = function () {
            if (window.confirm('¿Seguro que quieres limpiar el canvas?')) {
                canvas.clear();
            }
        };

        // Función para agregar texto desde otro input
        window.addText = function () {
            const text = document.getElementById('text-input').value;
            const textObject = new fabric.IText(text, { left: 50, top: 50, fontSize: 30 });
            canvas.add(textObject);
        };
    });
</script>



<script>

   
        // Mostrar las categorías de arte
        function openArtCategories() {
            document.getElementById('categories-container').style.display = 'block';
        }

        // Mostrar una categoría específica
        function showCategory(categoryId, containerId) {
            document.querySelectorAll('.category-container').forEach(container => {
                container.style.display = 'none';
            });

            document.getElementById(containerId).style.display = 'grid';

            // Cargar elementos de la categoría seleccionada
            const dataCategory = data[categoryId];
            const container = document.getElementById(containerId);
            container.innerHTML = ''; // Limpiar el contenedor

            for (const subCategory in dataCategory) {
                const button = document.createElement('button');
                button.innerHTML = subCategory;
                button.classList.add('btn', 'btn-outline-primary', 'btn-sm', 'm-1');
                button.onclick = function () {
                    showSubCategoryItems(subCategory, dataCategory, container);
                };
                container.appendChild(button);
            }
        }

        // Mostrar los elementos de una subcategoría
        function showSubCategoryItems(category, items, container) {
            container.innerHTML = ''; // Limpiar los elementos actuales

            items[category].forEach(item => {
                const button = document.createElement('button');
                button.innerHTML = item;
                button.classList.add('btn', 'btn-outline-secondary', 'btn-sm', 'm-1');
                button.onclick = function () {
                    placeShape(item); // Agregar el elemento al canvas
                };
                container.appendChild(button);
            });
        }

        // Función para colocar emojis o formas en el canvas
        function placeShape(art) {
            console.log('Emoji seleccionado:', art);


            const textObject = new fabric.Text(art, {
                left: 0,
                top: 0,
                fontSize: 40,
                fill: '#000',
                fontFamily: 'Arial',
                selectable: true,
            });

            canvas.add(textObject);
            canvas.setActiveObject(textObject);
            canvas.renderAll();
        }

        // Datos de las categorías
        const data = {
            emojis: {
                'Emoticonos': ['😊', '😂', '😍', '😎', '😭'],
                'Gente': ['👩‍🦰', '👨‍🦱', '👵', '🧑‍🦯', '🧑‍🦳'],
                'Manos': ['✋', '🖐', '👌', '👍', '👎'],
                'Animales': ['🐶', '🐱', '🐰', '🐯', '🐸'],
                'Naturaleza y clima': ['🌞', '🌧️', '⛅', '🌈', '🌻'],
                'Comida y bebida': ['🍎', '🍔', '🍕', '🍻', '🍰'],
                'Vacaciones': ['🌴', '🏖️', '🌍', '⛷️', '🎄'],
                'Objetos y símbolos': ['⚙️', '💎', '📱', '🔑', '🔒'],
                'Ver Todos': ['😊', '😂', '😍', '😎', '😭', '👩‍🦰', '👨‍🦱', '👵', '🧑‍🦯', '🧑‍🦳', '✋', '🖐', '👌', '👍', '👎', '🐶', '🐱', '🐰', '🐯', '🐸',
                    '🌞', '🌧️', '⛅', '🌈', '🌻', '🍎', '🍔', '🍕', '🍻', '🍰', '🌴', '🏖️', '🌍', '⛷️', '🎄', '⚙️', '💎', '📱', '🔑', '🔒']
            },
            shapes: {
                'Anclas': ['⚓', '⚓️'],
                'Flechas': ['➡️', '⏩', '↗️', '↘️'],
                'Cruces': ['✝️', '❌'],
                'Coronas': ['👑'],
                'Diamantes': ['💎'],
                'Flores': ['🌸', '🌻', '🌺'],
                'Corazones': ['❤️', '💔', '💖'],
                'Signos Musicales': ['🎵', '🎶', '🎼'],
                'Tréboles': ['🍀'],
                'Estrellas': ['⭐', '🌟', '✨'],
                'Ver Todos': ['⚓', '⚓️', '➡️', '⏩', '↗️', '↘️', '✝️', '❌', '👑', '💎', '🌸', '🌻', '🌺', '❤️', '💔', '💖', '🎵', '🎶', '🎼', '🍀', '⭐', '🌟', '✨']
            },
            sports: {
                'Futbol': ['⚽️', '🥅', '🎯'],
                'Beisbol': ['⚾️', '🥎', '🏅'],
                'Baloncesto': ['🏀', '🏀🏅', '⛹️‍♂️'],
                'Billar y pool': ['🎱', '🎱🎱', '🎱🛑'],
                'Boxeo': ['🥊', '💥', '🥋'],
                'Ajedrez': ['♟️', '♞', '♜'],
                'Bailar': ['💃', '🕺', '🎶'],
                'Golf': ['⛳️', '🏌️‍♂️', '⛳️🏌️‍♂️'],
                'Painball': ['🎯', '💣', '🎽'],
                'Natacion': ['🏊‍♂️', '🏊‍♀️', '🏖️'],
                'Esquiar': ['🎿', '🏂', '❄️'],
                'Atletismo': ['🏃‍♂️', '🏃‍♀️', '🏅'],
                'Ver Todos': ['⚽️', '🥅', '🎯', '⚾️', '🥎', '🏅', '🏀', '🏀🏅', '⛹️‍♂️', '🎱', '🎱🎱', '🎱🛑', '🥊', '💥', '🥋', '♟️', '♞', '♜',
                    '💃', '🕺', '🎶', '⛳️', '🏌️‍♂️', '⛳️🏌️‍♂️', '🎯', '💣', '🎽', '🏊‍♂️', '🏊‍♀️', '🏖️', '🎿', '🏂', '❄️', '🏃‍♂️', '🏃‍♀️', '🏅']

            },
            animals: {
                'Perros': ['🐶', '🐕', '🐩', '🦮', '🐕‍🦺'],
                'Osos': ['🐻', '🐻‍❄️', '🦭', '🐨', '🐻‍🐯'],
                'Leones': ['🦁', '🦁🐾', '👑', '🦁🦷', '🐾'],
                'Tigres': ['🐯', '🐅', '🐅👑', '🐯🦁', '🐯🐾'],
                'Toros': ['🐂', '🐃', '🐂🐄', '🐄', '🦙'],
                'Ovejas': ['🐑', '🐏', '🐐', '🐑🐐', '🐐🐏'],
                'Mariposas': ['🦋', '🐛', '🐜', '🐦', '🐝'],
                'Gatos': ['🐱', '🐈', '🐾', '😺', '😻'],
                'Delfines': ['🐬', '🐋', '🐟', '🐠', '🦈'],
                'Ballenas': ['🐋', '🐳', '🐬', '🦈', '🐠'],
                'Aguilas': ['🦅', '🐦', '🦅💨', '🐦🦋', '🦅🐦'],
                'Elefantes': ['🐘', '🐘👑', '🐘🐾', '🦏', '🐘🐅'],
                'Caballos': ['🐴', '🐎', '🐴🐄', '🦄', '🐴🐾'],
                'Ver Todos': ['🐶', '🐕', '🐩', '🦮', '🐕‍🦺', '🐻', '🐻‍❄️', '🦭', '🐨', '🐻‍🐯', '🦁', '🦁🐾', '👑', '🦁🦷', '🐾', '🐂', '🐃', '🐂🐄', '🐄', '🦙',
                    '🐑', '🐏', '🐐', '🐑🐐', '🐐🐏', '🦋', '🐛', '🐜', '🐦', '🐝', '🐱', '🐈', '🐾', '😺', '😻', '🐬', '🐋', '🐟', '🐠', '🦈',
                    '🐋', '🐳', '🐬', '🦈', '🐠', '🦅', '🐦', '🦅💨', '🐦🦋', '🦅🐦', '🐘', '🐘👑', '🐘🐾', '🦏', '🐘🐅', '🐴', '🐎', '🐴🐄', '🦄', '🐴🐾']
            },
            nature: {
                'Playas': ['🌴', '🏖️', '🌊'],
                'Montañas': ['🏔️', '⛰️', '🌋'],
                'Ver Todos': ['🌴', '🏖️', '🌊', '🏔️', '⛰️', '🌋']
            },

            letter: {
                'Alfabetos': ['A', 'B', 'C', 'D', 'E'],
                'Personajes': ['👩‍🦰', '👨‍🦱', '🧑‍🦯', '🧑‍🦳', '👵'],
                'Letras griegas': ['α', 'β', 'γ', 'δ', 'ε'],
                'Letras': ['G', 'H', 'Z', 'M', 'R'],
                'Monogramas': ['AA', 'WW', 'FF', 'DD', 'SS'],
                'Números': ['1', '2', '3', '4', '5'],
                'Puntuación': ['.', ',', '!', '?', ';'],
                'Símbolos': ['&', '#', '$', '%'],
                'Ver Todos': ['A', 'B', 'C', 'D', 'E', '👩‍🦰', '👨‍🦱', '🧑‍🦯', '🧑‍🦳', '👵', 'α', 'β', 'γ', 'δ', 'ε', 'G', 'H', 'Z', 'M', 'R',
                    'AA', 'WW', 'FF', 'DD', 'SS', '1', '2', '3', '4', '5', '.', ',', '!', '?', ';', '&', '#', '$', '%']

            }
        };


        const canvas = new fabric.Canvas('designCanvas');
  

</script>
